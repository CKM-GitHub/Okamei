@model Models.HanyouKensakuModel

@{
    ViewBag.Title = "HanyouKensakuList";
    var serverDate = ViewBag.ServerDate;
}

<style>
    .list-table {
        /*visibility: hidden;*/
    }

    .table th {
        padding-top: 2px;
        padding-bottom: 2px;
        background-color: #ffff66;
        white-space: nowrap;
    }

    #tblHanyouKensaku tbody td {
        padding-top: 2px;
        padding-bottom: 2px;
    }

    #tblHanyouKensaku .ID {
        min-width: 50px;
    }

    #tblHanyouKensaku .Key {
        min-width: 120px;
    }

    .Char1, .Char2, .Char3 {
        line-break: anywhere;
        min-width: 350px;
        max-width: 350px;
    }

    #tblHanyouKensaku .edit-td, #tblHanyouKensaku .delete-td {
        text-align: center;
        min-width: 50px;
    }
</style>

<h4 class="page-title">汎用マスタ検索</h4>
<div id="main" class="main-content">
    @using (Html.BeginForm("DisplayResult", "HanyouKensaku", FormMethod.Post, new { @name = "HanyouKensakuForm" }))
    {
        <div class="form-group row">
            <div class="col-sm-2">
                <label class="col-form-label label-title">ID名＊</label>
            </div>
            <div class="col-sm-10">
                @Html.DropDownListFor(
                model => model.ID,
                new SelectList(Model.IDSelectList, "Value", "DisplayText"),
                new { @class = "form-control size50" })
            </div>
        </div>

        <table class='table table-bordered list-table' id="tblHanyouKensaku">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>キー</th>
                    <th><span class="Char1">文字型項目1</span></th>
                    <th><span class="Char1">文字型項目2</span></th>
                    <th><span class="Char1">文字型項目3</span></th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @{
                    var columns = ViewBag.Data.Columns;
                }

                @foreach (System.Data.DataRow row in ViewBag.Data.Rows)
                {
                    <tr>
                        @{
                            var count = row.ItemArray.Count();
                            var items = row.ItemArray;
                            var id = row["ID"].ToString();
                        }
                        @for (var i = 0; i < count; i++)
                        {
                            <td class="@columns[i].Caption">
                                @if (columns[i].Caption == "Char1" || columns[i].Caption == "Char2" || columns[i].Caption == "Char3")
                                {
                                    <span class="@columns[i].Caption">@items[i]</span>
                                }
                                else
                                {
                                    @items[i]
                                }
                            </td>
                        }
                        <td class="edit-td">
                            @Html.ActionLink("編集", "Entry", "BukkenShousai", new { Mode = "Edit", id = id }, new { @class = "edit-link" })
                        </td>
                        <td class="delete-td">
                            @Html.ActionLink("削除", "Entry", "BukkenShousai", new { Mode = "Delete", id = id }, new { @class = "delete-link" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <div class="form-group row">
        <div class="footer-btn mx-auto">
            <button type="button" id="btnReturn" class="btn btn-secondary">戻る</button>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">

        $(document).ready(function () {
            $('#ID').focus();
            $('#btnReturn').click(function () {
                showConfirmMessage("Q004", function () {
                    //window.location.reload();
                    $('#ID').val($('ID option:first').val());
                    document.HanyouKensakuForm.submit();
                });
            });
            bindDataTables($('#tblHanyouKensaku'));

            $('#ID').change(function () {
                DisplayResult();
            })
        });

        function DisplayResult() {
            var model =
            {
                ID: $('#ID').val(),
                UserID: $('#user-id').text()
            };

            var result = calltoApiController('@Url.Action("ExistsDisplayResult", "api/HanyouKensakuApi")', model);
            if (!result) {
                return false;
            }
            if (result && result.MessageID) {
                showMessage(result);
                return false;
            }

            document.HanyouKensakuForm.submit();
        }
    </script>
}
