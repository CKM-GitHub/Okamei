@model Models.SmitumoriKanriModel

@{
    ViewBag.Title = "SmitumoriKanriList";
}

<style>
    input[type="text"] {
        font-size: 14px;
    }
    .table th:nth-child(6) {
        text-align: left;
    }

    .table th {
        padding-top: 2px;
        padding-bottom: 2px;
        background-color: #ffff66;
        font-size: 14px;
        text-align: center;
        white-space: nowrap;
    }

    .table tbody td {
        padding-top: 2px;
        padding-bottom: 2px;
        font-size: 14px;
        vertical-align: middle;
    }

    #tblSmitumoriKanri .SagyouDate,
    #tblSmitumoriKanri .KaesiYoteiDate {
        min-width: 110px;
        max-width: 110px;
    }

    #tblSmitumoriKanri .TantouCadCD,
    #tblSmitumoriKanri .TantouSitenCD,
    #tblSmitumoriKanri .IraiEigyouCD {
        min-width: 130px;
    }

    #tblSmitumoriKanri .BukkenName,
    #tblSmitumoriKanri .KoumutenName {
        min-width: 300px;
    }

    #tblSmitumoriKanri .KakoutuboSuu {
        min-width: 75px;
        text-align: right;
    }
    #txtKakoutuboSuu{
        text-align: right;
    }

    #tblSmitumoriKanri .SMitumoriCounter, #tblSmitumoriKanri_Clone {
        display: none;
    }

    #tblSmitumoriKanri .delete-td {
        text-align: center;
        min-width: 50px;
        white-space: nowrap;
    }

    .btnAdd {
        min-width: 120px;
        position: relative;
        padding-right: 15px;
        padding-left: 15px;
    }
    button.btnAdd {
        margin-top: 5px;
    }
</style>

<h4>S見積管理表</h4>
<div id="main" class="main-content">
    <table class='table table-bordered' id="tblSmitumoriKanri">
        <thead>
            <tr>
                <th>作業日<span style="color: red; margin-left: 2px;">*</span></th>
                <th>担当<span style="color: red; margin-left: 2px;">*</span></th>
                <th>物件名<span style="color: red; margin-left: 2px;">*</span></th>
                <th>工務店<span style="color: red; margin-left: 2px;">*</span></th>
                <th>坪数<span style="color: red; margin-left: 2px;">*</span></th>
                <th>支店<span style="color: red; margin-left: 2px;">*</span></th>
                <th>営業<span style="color: red; margin-left: 2px;">*</span></th>
                <th>返し予定日<span style="color: red; margin-left: 2px;">*</span></th>
                <th style="display: none;">SMitumoriCounter</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                var columns = ViewBag.Data.Columns;
            }

            @foreach (System.Data.DataRow row in ViewBag.Data.Rows)
            {
            <tr>
                @{
                    var count = row.ItemArray.Count();
                    var items = row.ItemArray;
                    var SMitumoriCounter = row["SMitumoriCounter"].ToString();
                }
                @for (var i = 0; i < count; i++)
                {
                    if (@columns[i].Caption == "SagyouDate")
                    {
                        <td class="@columns[i].Caption">
                            <input type="text" class="form-control size10" maxlength="10" id="txtSagyouDate" name="@columns[i].Caption" validate-required="true" validate-datetype="true" value="@items[i]" />
                        </td>
                    }
                    else if (@columns[i].Caption == "TantouCadCD")
                    {
                        <td class="@columns[i].Caption">
                            @Html.DropDownListFor(
                            model => model.TantouCadCD,
                            new SelectList(Model.TantouCadDropDownListItems, "Value", "DisplayText", @items[i]),
                            "",
                            new { @class = "form-control" })
                        </td>
                    }
                    else if (@columns[i].Caption == "BukkenName")
                    {
                        <td class="@columns[i].Caption">
                            <input type="text" class="form-control size30" maxlength="30" id="txtBukkenName" name="@columns[i].Caption" validate-required="true" value="@items[i]" />
                        </td>
                    }
                    else if (@columns[i].Caption == "KoumutenName")
                    {
                        <td class="@columns[i].Caption">
                            <input type="text" class="typeahead form-control size30" maxlength="30" autocomplete="off" validate-required="true" id="txtKoumutenName" name="@columns[i].Caption" value="@items[i]" />
                            @*@Html.DropDownListFor(
                    model => model.KoumutenName,
                    new SelectList(Model.KoumutenDropDownListItems, "Value", "DisplayText", @items[i]),
                    "",
                    new { @class = "form-control size20" })*@
                        </td>
                    }
                    else if (@columns[i].Caption == "KakoutuboSuu")
                    {
                        <td class="@columns[i].Caption">
                            <input type="text" class="form-control size7" maxlength="6" id="txtKakoutuboSuu" name="@columns[i].Caption" validate-required="true" value="@items[i]" />
                        </td>
                    }
                    else if (@columns[i].Caption == "TantouSitenCD")
                    {
                        <td class="@columns[i].Caption">
                            @Html.DropDownListFor(
                            model => model.TantouSitenCD,
                            new SelectList(Model.TantouSitenDropDownListItems, "Value", "DisplayText", @items[i]),
                            "",
                            new { @class = "form-control size20" })
                        </td>
                    }
                    else if (@columns[i].Caption == "IraiEigyouCD")
                    {
                        <td class="@columns[i].Caption">
                            @Html.DropDownListFor(
                            model => model.IraiEigyouCD,
                            new SelectList(Model.IraiEigyouDropDownListItems, "Value", "DisplayText", @items[i]),
                            "",
                            new { @class = "form-control size20" })
                        </td>
                    }
                    else if (@columns[i].Caption == "KaesiYoteiDate")
                    {
                        <td class="@columns[i].Caption">
                            <input type="text" class="form-control size10" maxlength="10" id="txtKaesiYoteiDate" name="@columns[i].Caption" validate-required="true" validate-datetype="true" value="@items[i]" />
                        </td>
                    }
                    else
                    {
                        <td class="@columns[i].Caption">
                            @items[i]
                        </td>
                    }
                }
                <td class="delete-td">
                    <button type="button" class="btn btn-link delete-link" onclick="DeleteData('@SMitumoriCounter', this)">削除</button>
                </td>
            </tr>
            }
        </tbody>
    </table>

    <table class='table table-bordered' id="tblSmitumoriKanri_Clone">
        <tbody>
            <tr>
                <td class="SagyouDate">
                    <input type="text" class="form-control size10" maxlength="10" id="txtSagyouDate" name="SagyouDate" validate-required="true" validate-datetype="true" />
                </td>
                <td class="TantouCadCD">
                    @Html.DropDownListFor(
                    model => model.TantouCadCD,
                    new SelectList(Model.TantouCadDropDownListItems, "Value", "DisplayText"),
                    "",
                    new { @class = "form-control" })
                </td>
                <td class="BukkenName">
                    <input type="text" class="form-control size30" maxlength="30" id="txtBukkenName" name="BukkenName" validate-required="true" />
                </td>
                <td class="KoumutenName">
                    <input type="text" class="typeahead form-control size30" maxlength="30" autocomplete="off"  id="txtKoumutenName" name="KoumutenName" validate-required="true" />
                    @*@Html.DropDownListFor(
                    model => model.KoumutenName,
                    new SelectList(Model.KoumutenDropDownListItems, "Value", "DisplayText"),
                    "",
                    new { @class = "form-control size20" })*@
                </td>
                <td class="KakoutuboSuu">
                    <input type="text" class="form-control size7" maxlength="6" id="txtKakoutuboSuu" name="KakoutuboSuu" validate-required="true" />
                </td>
                <td class="TantouSitenCD">
                    @Html.DropDownListFor(
                    model => model.TantouSitenCD,
                    new SelectList(Model.TantouSitenDropDownListItems, "Value", "DisplayText"),
                    "",
                    new { @class = "form-control size20" })
                </td>
                <td class="IraiEigyouCD">
                    @Html.DropDownListFor(
                    model => model.IraiEigyouCD,
                    new SelectList(Model.IraiEigyouDropDownListItems, "Value", "DisplayText"),
                    "",
                    new { @class = "form-control size20" })
                </td>
                <td class="KaesiYoteiDate">
                    <input type="text" class="form-control size10" maxlength="10" id="txtKaesiYoteiDate" name="KaesiYoteiDate" validate-required="true" validate-datetype="true" />
                </td>
                <td class="SMitumoriCounter">
                </td>
                <td class="delete-td">
                    <button type="button" class="btn btn-link delete-link" onclick="DeleteData(0, this)">削除</button>
                </td>
            </tr>
        </tbody>
    </table>

    <div class="form-group row" style="margin-top: 20px;">
        <div class="btnAdd">
            <button type="button" id="btnAdd" class="btn btn-secondary btnAdd">行追加</button>
        </div>
        <div class="footer-btn mx-auto">
            <button type="button" id="btnReturn" class="btn btn-secondary">戻る</button>
            <button type="button" id="btnProcess" class="btn btn-secondary">登録</button>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">

        $(document).ready(function () {

            $('#btnReturn').click(function () {
                showConfirmMessage("Q004", function () {
                    location.href = '@Url.Action("SetCondition", "SmitumoriKanri")';
                })
            });

            $('#btnAdd').click(function () {
                btnAdd_click();
            });

            $('#btnProcess').click(function () {
                showConfirmMessage("Q101", function () {
                    btnProcess_click();
                })
            });

            setDoubleByteValidate('#tblSmitumoriKanri tbody tr td #txtBukkenName');
            setNumericValidate('#tblSmitumoriKanri tbody tr td #txtKakoutuboSuu', 3, 2);
            setDoubleByteValidate('#tblSmitumoriKanri tbody tr td #txtKoumutenName');
            setDoubleByteValidate('#tblSmitumoriKanri tbody tr td #txtKoumutenName');

            //check user id who has access or not to edit
            var model = {
                UserID: $('#user-id').text()
            }
            var user_role = calltoApiController('@Url.Action("UserIDCheck", "api/SmitumoriKanriApi")', model);
            if (!user_role) {
                $('#tblSmitumoriKanri tr td:first-child #txtSagyouDate').attr("disabled", true);
                $('#tblSmitumoriKanri tr td:nth-child(2) select').attr("disabled", true);
                $('#tblSmitumoriKanri tr td:nth-child(3) #txtBukkenName').attr("disabled", true);
                $('#tblSmitumoriKanri tr td:nth-child(4) #txtKoumutenName').attr("disabled", true);
                $('#tblSmitumoriKanri tr td:nth-child(5) #txtKakoutuboSuu').attr("disabled", true);
                $('#tblSmitumoriKanri tr td:nth-child(6) select').attr("disabled", true);
                $('#tblSmitumoriKanri tr td:nth-child(7) select').attr("disabled", true);
                $('#tblSmitumoriKanri tr td:nth-child(8) #txtKaesiYoteiDate').attr("disabled", true);
                $('#tblSmitumoriKanri tr th:last-child').attr("style", "display: none;");
                $('#tblSmitumoriKanri tr td:last-child').attr("style", "display: none;");
                $('#btnAdd').attr("style", "display: none;");
                $('#btnProcess').attr("style", "display: none;");
            }
            else {
                setSuggestList('#txtKoumutenName', '@Url.Action("GetKoumutenSuggestItems", "api/InputBukkenShousaiApi")', '');
            }

            var t = bindDataTables($('#tblSmitumoriKanri'), { displayLength: 15 });
        });

        function DeleteData(SMitumoriCounter, ctrl) {
            showConfirmMessage("Q102", function () {
                if (SMitumoriCounter != 0) {
                    var model = {
                        SMitumoriCounter: SMitumoriCounter
                    }
                    var result = calltoApiController('@Url.Action("DeleteSMitumoriCounterData", "api/SmitumoriKanriApi")', model);
                    if (!result)
                        return false;
                    else
                        showMessage('I102', setTimeout(function () { window.location.reload(); }, 2000));
                }
                else {
                    $(ctrl).closest('tr').remove();
                }
                return true;
            });
        }

        function btnAdd_click() {
            if (checkErrorOnSave('#main')) {
                $('#tblSmitumoriKanri_next a').click();
                var c_name = $('#tblSmitumoriKanri tbody tr:last-child').attr("class");
                $('#tblSmitumoriKanri tbody:last-child').append($('#tblSmitumoriKanri_Clone tbody tr').clone());

                if (c_name == 'odd')
                    $('#tblSmitumoriKanri tbody tr:last-child').addClass("even");
                else
                    $('#tblSmitumoriKanri tbody tr:last-child').addClass("odd");

                setDateTypeValidate('#tblSmitumoriKanri tbody tr:last-child td #txtSagyouDate');
                setDoubleByteValidate('#tblSmitumoriKanri tbody tr:last-child td #txtBukkenName');
                setNumericValidate('#tblSmitumoriKanri tbody tr:last-child td #txtKakoutuboSuu', 3, 2);
                setDateTypeValidate('#tblSmitumoriKanri tbody tr:last-child td #txtKaesiYoteiDate');
                setDoubleByteValidate('#tblSmitumoriKanri tbody tr:last-child td #txtKoumutenName');
                setSuggestList('#tblSmitumoriKanri tbody tr:last-child td #txtKoumutenName', '@Url.Action("GetKoumutenSuggestItems", "api/InputBukkenShousaiApi")', '');
            }
            else
                showMessage('E102');
        }

        function ErrorCheck(ctrl, nextctrl) {
            var result = checkCommon(ctrl);
            if (!result) {
                success = false;
                return false;
            }
            if (result && result.MessageID) {
                success = false;
                $(this).focus();
                showMessage(result);
                return false;
            }
            else if (nextctrl != '')
                $(nextctrl).focus();
        }

        function btnProcess_click() {
            if (checkErrorOnSave('#main')) {
                var model = {
                    DetailDataJson: JSON.stringify(getDetailData()),
                    UserID: $('#user-id').text()
                }
                var result = calltoApiController('@Url.Action("ModifySMitumoriCounterData", "api/SmitumoriKanriApi")', model);
                if (!result)
                    return false;
                else
                    window.location.reload();
            }
            return true;
        }

        function getDetailData() {
            jsonObj = [];
            $("#tblSmitumoriKanri tr").each(function (i, tr) {
                item = {};
                item["SagyouDate"] = $(tr).find('td:eq(0)').text().trim() ? $(tr).find('td:eq(0)').text().trim() : $(tr).find('td:eq(0) input[type="text"]').val();
                item["TantouCadCD"] = $(tr).find('td:eq(1) :selected').val();
                item["BukkenName"] = $(tr).find('td:eq(2)').text().trim() ? $(tr).find('td:eq(2)').text().trim() : $(tr).find('td:eq(2) input[type="text"]').val();
                //item["KoumutenName"] = $(tr).find('td:eq(3) :selected').val();
                item["KoumutenName"] = $(tr).find('td:eq(3) #txtKoumutenName').val();
                item["KakoutuboSuu"] = $(tr).find('td:eq(4)').text().trim() ? $(tr).find('td:eq(4)').text().trim() : $(tr).find('td:eq(4) input[type="text"]').val();
                item["TantouSitenCD"] = $(tr).find('td:eq(5) :selected').val();
                item["IraiEigyouCD"] = $(tr).find('td:eq(6) :selected').val();
                item["KaesiYoteiDate"] = $(tr).find('td:eq(7)').text().trim() ? $(tr).find('td:eq(7)').text().trim() : $(tr).find('td:eq(7) input[type="text"]').val();
                item["SMitumoriCounter"] = $(tr).find('td:eq(8)').text().trim() ? $(tr).find('td:eq(8)').text().trim() : $(tr).find('td:eq(8)').text().trim();
                jsonObj.push(item);
            })
            jsonObj.shift();
            return jsonObj;
        }
    </script>
}
